// Margin and Padding

// #region
@use 'sass:map';
@use '../abstracts' as *;

$enable-margin-x: true;
$enable-shorthand-space: false;

$spacing-values: (
  0: 0,
  1s: $size-1,
  2s: $size-2,
  4s: $size-4,
  5s: $size-5,
  7s: $size-7,
  8s: $size-8,
  1: $size-line,
  2: $size-line * 2,
  3: $size-line * 3,
  4: $size-line * 4,
);

$spacing-values-negative: (
  n1s: -$size-1,
  n2s: -$size-2,
  n1:  -$size-line,
);

$spacing-props-shorthand: (
  'margin': (
    class-base: m,
    values: map.merge(
      $spacing-values,
      map.merge($spacing-values-negative, (auto: auto))
    ),
  ),
  'margin-block': (
    class-base: my,
    values: map.merge(
      $spacing-values,
      (auto: auto)
    ),
  ),
  'padding': (
    class-base: p,
    values: $spacing-values,
  ),
  'padding-block': (
    class-base: py,
    values: $spacing-values,
  ),
  'padding-inline': (
    class-base: px,
    values: $spacing-values,
  ),
);

$spacing-props-margin-x: (
  'margin-inline': (
    class-base: mx,
    values: map.merge(
      $spacing-values,
      map.merge($spacing-values-negative, (auto: auto))
    ),
  ),
  'margin-inline-start': (
    class-base: ms,
    values: map.merge(
      $spacing-values,
      map.merge($spacing-values-negative, (auto: auto))
    ),
  ),
  'margin-inline-end': (
    class-base: me,
    values: map.merge(
      $spacing-values,
      map.merge($spacing-values-negative, (auto: auto))
    ),
  ),
);

$spacing-props: (
  'margin-top': (
    class-base: mt,
    values: map.merge(
      $spacing-values,
      map.merge($spacing-values-negative, (auto: auto))
    ),
  ),
  'margin-bottom': (
    class-base: mb,
    values: map.merge(
      $spacing-values,
      map.merge($spacing-values-negative, (auto: auto))
    ),
  ),
  'padding-top': (
    class-base: pt,
    values: $spacing-values,
  ),
  'padding-bottom': (
    class-base: pb,
    values: $spacing-values,
  ),
  'padding-inline-start': (
    class-base: ps,
    values: $spacing-values,
  ),
  'padding-inline-end': (
    class-base: pe,
    values: $spacing-values,
  ),
);

@if $enable-shorthand-space {
  $spacing-props: map.merge($spacing-props-shorthand, $spacing-props);
}

@if $enable-margin-x {
  $spacing-props: map.merge($spacing-props-margin-x, $spacing-props);
}

@include utility-classes($spacing-props);
